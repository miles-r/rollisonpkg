joined %<>% mutate(ams_hay_region = case_when(
ams_hay_region == "Northeast" ~ "Northeast Colorado",
ams_hay_region == "Southwest" ~ "South Western Colorado",
ams_hay_region == "Southeast" ~ "Southeast Colorado",
TRUE ~ ams_hay_region))
# combining two areas to match other data frame
hay %<>% mutate( location = case_when(
location == "Mountain Area" ~ "Mountains and Northwest",
location == "Western Slope Area" ~ "Mountains and Northwest",
TRUE ~ location))
# change region to harmonize with hay regions based on AMS area info
corn %<>% mutate( location = case_when(
location == "North Central Colorado" ~ "Northeast Colorado", #Greeley, Roggen, Byers
location == "East Central Colorado" ~ "Southeast Colorado", # Cheyenne Wells, Limon,
location == "South Central Colorado" ~ "San Luis Valley",
TRUE ~ location))
corn$spread = corn$price_bu_high - corn$price_bu_low
hay$spread = hay$bid_high - hay$bid_low
region_drought = joined %>% group_by(year, month, day, ams_hay_region, FIPS) %>% summarise(pct_area = max(D2_or_greater_pct))
region_drought %<>% arrange(year, month, day)
region_drought %<>% group_by(year, month, day, ams_hay_region) %>% summarise(pct_area = sum(pct_area) %>% round(4))
region_drought %<>% arrange(ams_hay_region, year, month, day)
dummies = rollison::make_dummies(region_drought$ams_hay_region) * region_drought$pct_area
dummies %<>% as_tibble
consec = dummies %>% mutate_all(funs(consecutive_event(.))) %>% rowSums
region_drought$consecutive_weeks = consec
# since = dummies %>% mutate_all(funs(consecutive_event(., since = T)))
# colnames(since) %<>% make.names
# region_drought %<>% bind_cols(since) %>% mutate(since = case_when(
#   ams_hay_region == "Mountains and Northwest" ~ Mountains.and.Northwest,
#   ams_hay_region == "None" ~ None,
#   ams_hay_region == "Northeast Colorado" ~ Northeast.Colorado,
#   ams_hay_region == "San Luis Valley" ~ San.Luis.Valley,
#   ams_hay_region == "South Western Colorado" ~ South.Western.Colorado,
#   ams_hay_region == "Southeast Colorado" ~ Southeast.Colorado))
region_drought %<>% select( c(year, month, ams_hay_region, pct_area, consecutive_weeks))
region_drought$month %<>% as.integer
region_drought %<>% group_by(ams_hay_region, year, month) %>%
summarise( pct_area_severe = max(pct_area), consecutive_weeks = max(consecutive_weeks))
dfh = full_join(hay, region_drought, by = c("year" = "year", "month" = "month", "location" = "ams_hay_region"))
dfc = full_join(corn, region_drought, by = c("year" = "year", "month" = "month", "location" = "ams_hay_region"))
dfc %>% filter(location != "Denver", location != "Southwest Nebraska / Southeast Wyoming")
df_plot = full_join(dfh, dfc, by = c("year" = "year", "month" = "month", "location" = "location"))
df_plot %<>%
filter( !is.na(price_bu_high ), grade.x == "PREMIUM", class.x == "ALFALFA") %>%
select(year, month, location,
price_bu_high, price_bu_low, bid_high.x, bid_low.x,
pct_area_severe.x, consecutive_weeks.x,
spread.x, spread.y)
df_plot$date = df_plot$year + ( df_plot$month %>% as.numeric / 100 )
#df_plot %<>% mutate_at(vars(bid_high.x, price_bu_high), funs(rollison::rescale(., a = 1, b = 2)))
df_plot %<>% group_by(year, month, location) %>% summarise( date = mean(date),
pct_area_severe = max(pct_area_severe.x),
price_bu_high = mean(price_bu_high),
price_bu_low = mean(price_bu_low),
bid_high = mean(bid_high.x),
bid_low = mean(bid_low.x),
consecutive_weeks = max(consecutive_weeks.x),
spread_h = max(spread.x),
spread_c = max(spread.y))
df_plot$pct_scaled = rollison::rescale(df_plot$pct_area_severe, 10, 100)
cols = c(corn = "goldenrod", hay = "darkgreen", drought = "red", low = "blue")
ggplot( data = df_plot %>% filter(location == "Northeast Colorado", year < 2006) , mapping = aes(x = date))+
geom_col(aes(y = pct_scaled, color = "drought")) +
geom_line( aes( y = bid_low, color = "low")) +
geom_line( aes( y = bid_high, color = "hay")) +
ylab("Price $/Load Lot") +
ggtitle("Drought Severity and Hay Price - Northeast CO 2000-2005") +
scale_color_manual("",
values = cols,
breaks = c("corn", "hay", "drought", "low"))
ggplot( data = df_plot %>% filter(location == "Northeast Colorado", year >2009 & year < 2016) , mapping = aes(x = date))+
geom_col(aes(y = pct_area_severe*2, color = "drought")) +
geom_line( aes( y = price_bu_high, color = "corn")) +
geom_line( aes( y = price_bu_low, color = "low")) +
ylab("Price $/bu") +
ggtitle("Drought Severity and Corn Price - Northeast CO") +
scale_color_manual("",
values = cols,
breaks = c("corn", "hay", "drought","low"))
ggplot( data = df_plot %>% filter(location == "Southeast Colorado") , mapping = aes(x = date))+
geom_col(aes(y = pct_scaled, color = "drought")) +
geom_line( aes( y = bid_low, color = "low")) +
geom_line( aes( y = bid_high, color = "hay")) +
ylab("Price $/Load Lot") +
ggtitle("Drought Severity and Hay Price - Southeast CO") +
scale_color_manual("",
values = cols,
breaks = c("corn", "hay", "drought", "low"))
ggplot( data = df_plot %>% filter(location == "Southeast Colorado") , mapping = aes(x = date))+
geom_col(aes(y = pct_area_severe*2, color = "drought")) +
geom_line( aes( y = price_bu_high, color = "corn")) +
geom_line( aes( y = price_bu_low, color = "low")) +
ylab("Price $/bu") +
ggtitle("Drought Severity and Corn Price - Southeast CO") +
scale_color_manual("",
values = cols,
breaks = c("corn", "hay", "drought", "low"))
dfh %<>% filter(month > 5 & month < 11, grade != "UTILITY")
period1h = dfh %>% filter(year < 2006)
period2h = dfh %>% filter( year > 2007 & year < 2014)
bothh = bind_rows(period1h, period2h)
dfc %<>% filter(month > 5 & month < 11)
period1c = dfc %>% filter(year < 2006 )
period2c = dfc %>% filter( year > 2007 & year < 2014)
bothc = bind_rows(period1c, period2c)
rollison::na_magic(dfc, 0)
dfc %<>% rollison::na_magic( 0)
stargazer(dfc$price_bu_low, dfc$price_bu_high, dfc$spread , header = F,
summary = T, summary.stat = c("min", "median", "mean", "max", "n", "sd"))
which( is.na(dfc))
View(dfc)
dfc %>% select(price_bu_low, price_bu_high, spread) %>% summarise_all()
dfc %>% select(price_bu_low, price_bu_high, spread) %>%
summarise_all(funs(min = min,
q25 = quantile(., 0.25),
median = median,
q75 = quantile(., 0.75),
max = max,
mean = mean,
sd = sd))
dfc %>% select(price_bu_low, price_bu_high, spread) %>%
summarise_all(funs(min = min,
q25 = quantile(., 0.25),
median = median,
q75 = quantile(., 0.75),
max = max,
mean = mean,
sd = sd)) %>% gather(stat, val) %>%
separate(stat, into = c("var", "stat"), sep = "_") %>%
spread(stat, val) %>%
select(var, min, q25, median, q75, max, mean, sd)
dfc %>% select(price.low =price_bu_low, price.high = price_bu_high, spread) %>%
summarise_all(funs(min = min,
q25 = quantile(., 0.25),
median = median,
q75 = quantile(., 0.75),
max = max,
mean = mean,
sd = sd)) %>% gather(stat, val) %>%
separate(stat, into = c("var", "stat"), sep = "_") %>%
spread(stat, val) %>%
select(var, min, q25, median, q75, max, mean, sd)
toselect = c(price.low =price_bu_low, price.high = price_bu_high, spread)
toselect = c(price.low = dfc$price_bu_low, price.high = dfc$price_bu_high, dfc$spread)
dfc %>% select(toselect) %>%
summarise_all(funs(min = min,
q25 = quantile(., 0.25),
median = median,
q75 = quantile(., 0.75),
max = max,
mean = mean,
sd = sd)) %>% gather(stat, val) %>%
separate(stat, into = c("var", "stat"), sep = "_") %>%
spread(stat, val) %>%
select(var, min, q25, median, q75, max, mean, sd)
dfc %>% select(price.low =price_bu_low, price.high = price_bu_high, spread) %>%
summarise_all(funs(min = min,
q25 = quantile(., 0.25),
median = median,
q75 = quantile(., 0.75),
max = max,
mean = mean,
sd = sd)) %>% gather(stat, val) %>%
separate(stat, into = c("var", "stat"), sep = "_") %>%
spread(stat, val) %>%
select(var, min, q25, median, q75, max, mean, sd)
summary_tibble = function(x){
summarise_all(funs(min = min,
q25 = quantile(., 0.25),
median = median,
q75 = quantile(., 0.75),
max = max,
mean = mean,
sd = sd)) %>% gather(stat, val) %>%
separate(stat, into = c("var", "stat"), sep = "_") %>%
spread(stat, val) %>%
select(var, min, q25, median, q75, max, mean, sd)
}
dfc %>% select(price.low =price_bu_low, price.high = price_bu_high, spread) %>%
summary_tibble
x %>%  summarise_all(funs(min = min,
q25 = quantile(., 0.25),
median = median,
q75 = quantile(., 0.75),
max = max,
mean = mean,
sd = sd)) %>% gather(stat, val) %>%
separate(stat, into = c("var", "stat"), sep = "_") %>%
spread(stat, val) %>%
select(var, min, q25, median, q75, max, mean, sd)
summary_tibble = function(x){
x %>%  summarise_all(funs(min = min,
q25 = quantile(., 0.25),
median = median,
q75 = quantile(., 0.75),
max = max,
mean = mean,
sd = sd)) %>% gather(stat, val) %>%
separate(stat, into = c("var", "stat"), sep = "_") %>%
spread(stat, val) %>%
select(var, min, q25, median, q75, max, mean, sd)
}
dfc %>% select(price.low =price_bu_low, price.high = price_bu_high, spread) %>%
summary_tibble
summary_tibble = function(x){
x %>%  chartr("_", ".", .) %>%  summarise_all(funs(min = min,
q25 = quantile(., 0.25),
median = median,
q75 = quantile(., 0.75),
max = max,
mean = mean,
sd = sd)) %>% gather(stat, val) %>%
separate(stat, into = c("var", "stat"), sep = "_") %>%
spread(stat, val) %>%
select(var, min, q25, median, q75, max, mean, sd)
}
dfc %>% select(price.low =price_bu_low, price.high = price_bu_high, spread) %>%
summary_tibble
summary_tibble = function(x){
names(x) %>%  chartr("_", ".", .)
x %>%  summarise_all(funs(min = min,
q25 = quantile(., 0.25),
median = median,
q75 = quantile(., 0.75),
max = max,
mean = mean,
sd = sd)) %>% gather(stat, val) %>%
separate(stat, into = c("var", "stat"), sep = "_") %>%
spread(stat, val) %>%
select(var, min, q25, median, q75, max, mean, sd)
}
dfc %>% select(price.low =price_bu_low, price.high = price_bu_high, spread) %>%
summary_tibble
dfc %>% select(price_bu_low, price.high = price_bu_high, spread) %>%
summary_tibble
dfc %>% select(price_bu_low, price.high = price_bu_high, spread) %>% names
summary_tibble = function(x){
names(x) %<>%  chartr("_", ".", .)
x %>%  summarise_all(funs(min = min,
q25 = quantile(., 0.25),
median = median,
q75 = quantile(., 0.75),
max = max,
mean = mean,
sd = sd)) %>% gather(stat, val) %>%
separate(stat, into = c("var", "stat"), sep = "_") %>%
spread(stat, val) %>%
select(var, min, q25, median, q75, max, mean, sd)
}
dfc %>% select(price_bu_low, price.high = price_bu_high, spread)%>%
summary_tibble
dfc %>% select(price_bu_low, price_bu_high, spread)%>%
summary_tibble
dfh %>% select(bid_low, bid_high, spread) %>% summary_tibble
library(rollison)
knitr::opts_chunk$set(echo = F, include = F, message = F)
library(tidyverse)
library(magrittr)
library(stargazer)
dfc %>% select(price_bu_low, price_bu_high, spread)%>% rollison::summary_tibble
dfc %>% select(price_bu_low, price_bu_high, spread)%>% summary_tibble
dfc %>% select(price_bu_low, price_bu_high, spread)%>% rollison::summary_tibble
library(rollison)
dfh %>% select(bid_low, bid_high, spread) %>% summary_tibble
knitr::opts_chunk$set(echo = F, include = F, message = F, warning=F)
library(tidyverse)
library(magrittr)
library(stargazer)
library(rollison)
print("Corn")
dfc %>% select(price_bu_low, price_bu_high, spread) %>% summary_tibble
print("Hay")
dfh %>% select(bid_low, bid_high, spread) %>% summary_tibble
dfc %<>% rollison::na_magic( 0)
which(is.na(dfh))
?summarise_all
summary_tibble = function(x){
names(x) %<>%  chartr("_", ".", .)
x %>%  summarise_all(funs(min = min,
q25 = quantile(., 0.25),
median = median,
q75 = quantile(., 0.75),
max = max,
mean = mean,
sd = sd),
na.rm = T) %>%
gather(stat, val) %>%
separate(stat, into = c("var", "stat"), sep = "_") %>%
spread(stat, val) %>%
select(var, min, q25, median, q75, max, mean, sd)
}
library(rollison)
View(region_drought)
knitr::opts_chunk$set(echo = F, include = F, message = F, warning=F)
library(tidyverse)
library(magrittr)
library(stargazer)
library(rollison)
region_drought %>% group_by(year, month, location) %>% summary_tibble
region_drought %>% group_by(year, month, ams_hay_region) %>% summary_tibble
region_drought %>% %>% summary_tibble
region_drought %>% summary_tibble
region_drought %>% group_by(ams_hay_region) %>%  summary_tibble
region_drought %>% select(consecutive_weeks) %>% summary_tibble
region_drought
region_drought %>% select(consecutive_weeks) %>% mean
region_drought %>% na.omit %>% select(consecutive_weeks) %>% mean
region_drought$consecutive_weeks %>% na.omit %>%  mean
region_drought$consecutive_weeks %>%   mean
region_drought$consecutive_weeks %>% summary_tibble(
region_drought$consecutive_weeks %>% summary_tibble
region_drought %>% summary_tibble
region_drought %>% summary
region_drought %>% group_by(ams_hay_region) %>% summary
region_drought %>% map_df(.f = ~ broom::tidy(summary(.x)), .id = "variable")
region_drought %>% select(pct_area_severe) %>%  map_df(.f = ~ broom::tidy(summary(.x)), .id = "variable")
dfc %>% select(price_bu_low, price_bu_high, spread) %>%  map_df(.f = ~ broom::tidy(summary(.x)), .id = "variable")
summary_tibble = function(x){
x %>% map_df(.f = ~ broom::tidy(summary(.x)), .id = "variable")
}
dfc %>% select(price_bu_low, price_bu_high, spread) %>% summary_tibble
dfh %>% select(bid_low, bid_high, spread) %>% summary_tibble
?gt
install.packages("gt")
?install.packages
available.packages()
available.packages()["gt"]
ap = available.packages()
"gt" %in% ap
ap["gt"]
?updateR
devtools::install_github("rstudio/gt")
install.packages("remotes")
knitr::opts_chunk$set(echo = F, include = F, message = F, warning=F)
library(tidyverse)
library(magrittr)
library(stargazer)
library(rollison)
remotes::install_github("rstudio/gt")
getOption("download.file.method")
options("download.file.method" = "libcurl")
remotes::install_github("rstudio/gt")
install.packages("sass")
remotes::install_github("rstudio/sass")
remotes::install_github("rstudio/gt")
install.packages("R6")
library(gt)
knitr::opts_chunk$set(echo = F, include = F, message = F, warning=F)
library(tidyverse)
library(magrittr)
library(stargazer)
library(rollison)
consecutive_event = function(x, current = F){
#' Count consecutive periods that an event has occured
#'
#' @param x vector of events
#' @param current if TRUE, the current observation will be included in the count
#'
#' @return returns a vector of same length as x with number of consecutive periods event has happened
#' @export
#'
#' @examples
n = 0
y = c()
for (i in x) {
y = c(y, n)
if(i == 0) n = 0
else if (i > 0) n = n + 1
}
return(y)
}
drought = read_csv("/home/user1/workspace/0_thesis/commodity series/drought/original drought data/totalArea_categorical_byCounty_CO_20000101_20191219.csv")
drought$County = gsub(" County", "", drought$County)
counties = read_csv("/home/user1/workspace/0_thesis/commodity series/drought/counties_in_regions_CO.csv")
hay = read_csv("/home/user1/workspace/0_thesis/commodity series/hay report monthly 2000_2018.csv")
corn = read_csv("/home/user1/workspace/0_thesis/commodity series/corn report monthly 2000_2018.csv")
hay %<>% filter(state == "CO")
corn%<>% filter(state == "CO")
joined = full_join(drought, counties, by = c("County" = "county"))
region_area = joined %>% group_by(County, ams_hay_region) %>% summarise(max = max(None)) %>%
group_by(ams_hay_region) %>% summarise(region_area = sum(max))
joined = full_join(joined, region_area, by = c("ams_hay_region" = "ams_hay_region"))
joined = joined[,-13]
joined %<>% mutate(D2_or_greater = case_when(
D2 + D3 + D4 > 0 ~ D2 + D3 + D4 ,
TRUE ~ 0))
joined %<>% mutate(D2_or_greater_pct = D2_or_greater / region_area)
# just renaming
joined %<>% mutate(ams_hay_region = case_when(
ams_hay_region == "Northeast" ~ "Northeast Colorado",
ams_hay_region == "Southwest" ~ "South Western Colorado",
ams_hay_region == "Southeast" ~ "Southeast Colorado",
TRUE ~ ams_hay_region))
# combining two areas to match other data frame
hay %<>% mutate( location = case_when(
location == "Mountain Area" ~ "Mountains and Northwest",
location == "Western Slope Area" ~ "Mountains and Northwest",
TRUE ~ location))
# change region to harmonize with hay regions based on AMS area info
corn %<>% mutate( location = case_when(
location == "North Central Colorado" ~ "Northeast Colorado", #Greeley, Roggen, Byers
location == "East Central Colorado" ~ "Southeast Colorado", # Cheyenne Wells, Limon,
location == "South Central Colorado" ~ "San Luis Valley",
TRUE ~ location))
corn$spread = corn$price_bu_high - corn$price_bu_low
hay$spread = hay$bid_high - hay$bid_low
region_drought = joined %>% group_by(year, month, day, ams_hay_region, FIPS) %>% summarise(pct_area = max(D2_or_greater_pct))
region_drought %<>% arrange(year, month, day)
region_drought %<>% group_by(year, month, day, ams_hay_region) %>% summarise(pct_area = sum(pct_area) %>% round(4))
region_drought %<>% arrange(ams_hay_region, year, month, day)
dummies = rollison::make_dummies(region_drought$ams_hay_region) * region_drought$pct_area
dummies %<>% as_tibble
consec = dummies %>% mutate_all(funs(consecutive_event(.))) %>% rowSums
region_drought$consecutive_weeks = consec
# since = dummies %>% mutate_all(funs(consecutive_event(., since = T)))
# colnames(since) %<>% make.names
# region_drought %<>% bind_cols(since) %>% mutate(since = case_when(
#   ams_hay_region == "Mountains and Northwest" ~ Mountains.and.Northwest,
#   ams_hay_region == "None" ~ None,
#   ams_hay_region == "Northeast Colorado" ~ Northeast.Colorado,
#   ams_hay_region == "San Luis Valley" ~ San.Luis.Valley,
#   ams_hay_region == "South Western Colorado" ~ South.Western.Colorado,
#   ams_hay_region == "Southeast Colorado" ~ Southeast.Colorado))
region_drought %<>% select( c(year, month, ams_hay_region, pct_area, consecutive_weeks))
region_drought$month %<>% as.integer
region_drought %<>% group_by(ams_hay_region, year, month) %>%
summarise( pct_area_severe = max(pct_area), consecutive_weeks = max(consecutive_weeks))
dfh = full_join(hay, region_drought, by = c("year" = "year", "month" = "month", "location" = "ams_hay_region"))
dfc = full_join(corn, region_drought, by = c("year" = "year", "month" = "month", "location" = "ams_hay_region"))
dfc %>% filter(location != "Denver", location != "Southwest Nebraska / Southeast Wyoming")
df_plot = full_join(dfh, dfc, by = c("year" = "year", "month" = "month", "location" = "location"))
df_plot %<>%
filter( !is.na(price_bu_high ), grade.x == "PREMIUM", class.x == "ALFALFA") %>%
select(year, month, location,
price_bu_high, price_bu_low, bid_high.x, bid_low.x,
pct_area_severe.x, consecutive_weeks.x,
spread.x, spread.y)
df_plot$date = df_plot$year + ( df_plot$month %>% as.numeric / 100 )
#df_plot %<>% mutate_at(vars(bid_high.x, price_bu_high), funs(rollison::rescale(., a = 1, b = 2)))
df_plot %<>% group_by(year, month, location) %>% summarise( date = mean(date),
pct_area_severe = max(pct_area_severe.x),
price_bu_high = mean(price_bu_high),
price_bu_low = mean(price_bu_low),
bid_high = mean(bid_high.x),
bid_low = mean(bid_low.x),
consecutive_weeks = max(consecutive_weeks.x),
spread_h = max(spread.x),
spread_c = max(spread.y))
df_plot$pct_scaled = rollison::rescale(df_plot$pct_area_severe, 10, 100)
cols = c(corn = "goldenrod", hay = "darkgreen", drought = "red", low = "blue")
ggplot( data = df_plot %>% filter(location == "Northeast Colorado", year < 2006) , mapping = aes(x = date))+
geom_col(aes(y = pct_scaled, color = "drought")) +
geom_line( aes( y = bid_low, color = "low")) +
geom_line( aes( y = bid_high, color = "hay")) +
ylab("Price $/Load Lot") +
ggtitle("Drought Severity and Hay Price - Northeast CO 2000-2005") +
scale_color_manual("",
values = cols,
breaks = c("corn", "hay", "drought", "low"))
ggplot( data = df_plot %>% filter(location == "Northeast Colorado", year >2009 & year < 2016) , mapping = aes(x = date))+
geom_col(aes(y = pct_area_severe*2, color = "drought")) +
geom_line( aes( y = price_bu_high, color = "corn")) +
geom_line( aes( y = price_bu_low, color = "low")) +
ylab("Price $/bu") +
ggtitle("Drought Severity and Corn Price - Northeast CO") +
scale_color_manual("",
values = cols,
breaks = c("corn", "hay", "drought","low"))
ggplot( data = df_plot %>% filter(location == "Southeast Colorado") , mapping = aes(x = date))+
geom_col(aes(y = pct_scaled, color = "drought")) +
geom_line( aes( y = bid_low, color = "low")) +
geom_line( aes( y = bid_high, color = "hay")) +
ylab("Price $/Load Lot") +
ggtitle("Drought Severity and Hay Price - Southeast CO") +
scale_color_manual("",
values = cols,
breaks = c("corn", "hay", "drought", "low"))
ggplot( data = df_plot %>% filter(location == "Southeast Colorado") , mapping = aes(x = date))+
geom_col(aes(y = pct_area_severe*2, color = "drought")) +
geom_line( aes( y = price_bu_high, color = "corn")) +
geom_line( aes( y = price_bu_low, color = "low")) +
ylab("Price $/bu") +
ggtitle("Drought Severity and Corn Price - Southeast CO") +
scale_color_manual("",
values = cols,
breaks = c("corn", "hay", "drought", "low"))
dfh %<>% filter(month > 5 & month < 11, grade != "UTILITY")
period1h = dfh %>% filter(year < 2006)
period2h = dfh %>% filter( year > 2007 & year < 2014)
bothh = bind_rows(period1h, period2h)
dfc %<>% filter(month > 5 & month < 11)
period1c = dfc %>% filter(year < 2006 )
period2c = dfc %>% filter( year > 2007 & year < 2014)
bothc = bind_rows(period1c, period2c)
gt(dfc %>% select(price_bu_low, price_bu_high, spread) %>% summary_tibble)
library(gt)
gt(dfc %>% select(price_bu_low, price_bu_high, spread) %>% summary_tibble)
corn_summary = gt(dfc %>% select(price_bu_low, price_bu_high, spread) %>% summary_tibble)
corn_summary = dfc %>% select(price_bu_low, price_bu_high, spread) %>% summary_tibble %>% gt
corn_summary %>% tab_header(title = "Corn Summary Stats")
dfc %>% select(price_bu_low, price_bu_high, spread) %>%  map_df(.f = ~ broom::tidy(summary(.x)), .id = "variable") %>% gt %>% tab_header(title = "Drought Summary Stats")
dfc %>% select(pct_area_severe, consecutive_weeks) %>%  map_df(.f = ~ broom::tidy(summary(.x)), .id = "variable") %>% gt %>% tab_header(title = "Drought Summary Stats")
dfh_test = full_join(hay, region_drought, by = c("year" = "year", "month" = "month", "location" = "ams_hay_region"))
predict(ols2,  dfh_test %>% filter(year > 2013))
ols2 = period2h %>% lm(bid_high ~ location + as.factor(month) + class + grade + pct_area_severe + consecutive_weeks + units, data = .)
olsb = bothh %>% lm(bid_high ~ location + as.factor(month) + class + grade + pct_area_severe + consecutive_weeks + units, data = .)
predict(ols2,  dfh_test %>% filter(year > 2013))
dfh_test = full_join(hay, region_drought, by = c("year" = "year", "month" = "month", "location" = "ams_hay_region")) %>% filter(location != "None")
predict(ols2,  dfh_test %>% filter(year > 2013))
dfh_test = full_join(hay, region_drought, by = c("year" = "year", "month" = "month", "location" = "ams_hay_region")) %>% filter(location == "Northeast Colorado")
predict(ols2,  dfh_test %>% filter(year > 2013))
